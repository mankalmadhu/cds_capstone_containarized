from textblob import TextBlob
from pyspark.sql.functions import pandas_udf, col
from pyspark.sql.types import StringType
from pyspark.ml.feature import StringIndexer
import pandas as pd


def map_polarity(text):
    score = TextBlob(text).sentiment.polarity
    if score < 0:
        return 'Negative'
    elif score == 0:
        return 'Neutral'
    else:
        return 'Positive'


def get_text_blob_sentiment(text_series: pd.Series) -> pd.Series:

    processed_text_series = text_series.apply(lambda txt: map_polarity(txt))
    return processed_text_series


def label_data(tweet_df):
    labeler_udf = pandas_udf(get_text_blob_sentiment, returnType=StringType())
    tweet_df = tweet_df.withColumn("train_sentiment", labeler_udf(col('text')))
    sentiment_indexer = StringIndexer(inputCol="train_sentiment",
                                      outputCol="train_sentiment_index")

    tweet_df = sentiment_indexer.fit(tweet_df).transform(tweet_df)

    return tweet_df
