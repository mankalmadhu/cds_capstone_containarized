from pyspark.ml.classification import LogisticRegression
from pyspark.ml.feature import VectorAssembler
from pyspark.ml import Pipeline


def train(tweet_df):
    train_data, test_data = tweet_df.randomSplit([0.8, 0.2])

    feature_assembled_vectors = VectorAssembler(
        inputCols=['word2_vec_features', 'cv_features'],
        outputCol='assembled_features')

    logistic_regression = LogisticRegression(
        featuresCol="assembled_features",
        labelCol='train_sentiment_index',
        predictionCol='lr_sentiment_pred',
        rawPredictionCol='lr_sentiment_raw_pred',
        probabilityCol='lr_sentiment_pred_proba')

    tweet_feature_exraction_pipeline = Pipeline(
        stages=[feature_assembled_vectors, logistic_regression])

    lr_model = tweet_feature_exraction_pipeline.fit(train_data)
    predictions = lr_model.transform(test_data)

    return lr_model, predictions
