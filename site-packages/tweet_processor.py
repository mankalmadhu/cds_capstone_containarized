import tweepy
import os
import sys


def is_retweet(entry):
    return 'retweeted_status' in entry.keys()


def get_source(entry):
    if '<' in entry["source"]:
        return entry["source"].split('>')[1].split('<')[0]
    else:
        return entry["source"]


def build_filtered_json_list(tweet_list, extract_user_details=None):
    filtered_tweet_list = []
    for tweet in tweet_list:
        data = tweet._json
        t = {
            "created_at": data["created_at"],
            "text": data["text"],
            "retweet_count": data["retweet_count"],
            "favorite_count": data["favorite_count"],
            "source": get_source(data),
            "id_str": data["id_str"],
            "is_retweet": is_retweet(data)
        }

        if extract_user_details:
            t["user_location"] = data["user"]["location"],
            t["user_name"] = data["user"]["name"],
            t["user_followers"] = data["user"]["followers_count"]

        filtered_tweet_list.append(t)

    return filtered_tweet_list


def build_twitter_api_object():

    auth = tweepy.OAuthHandler(os.environ['twitter_consumer_key'],
                               os.environ['twitter_consumer_secret'])
    auth.set_access_token(os.environ['twitter_access_key'],
                          os.environ['twitter_access_secret'])
    api = tweepy.API(auth,
                     retry_delay=60 * 3,
                     retry_count=5,
                     retry_errors=set([401, 404, 500, 503]),
                     wait_on_rate_limit=True)

    if not api.verify_credentials():
        print("Your twitter api credentials are invalid")
        sys.exit()

    return api


def build_tweet_search_cursor(date_since, search_words):
    # Collect tweets
    tweepy_api = build_twitter_api_object()
    return tweepy.Cursor(tweepy_api.search_tweets,
                         q=search_words,
                         lang="en",
                         result_type='recent',
                         until=date_since)
